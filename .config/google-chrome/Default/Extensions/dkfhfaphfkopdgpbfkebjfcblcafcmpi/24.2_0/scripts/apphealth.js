var ts_last_js_running=new Date,ts_last_internet_ping=new Date,remoteAssetToCheckForInHealthCheck="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js",globalShouldPerformGlobalAppHealthCheck=!0;
function checkInternetConnection(a,b){if(!globalShouldPerformGlobalAppHealthCheck)return!1;colorConsole("Inside of checkInternetConnection.  Checking user internet connectivity.","green","14px");navigator.onLine?(sampleThisHighVolumeGAEvent({name:"internet-connection-check-before-ajax-network-OK"}),$.ajax({type:"GET",url:remoteAssetToCheckForInHealthCheck,timeout:5E3,cache:!1,dataType:"text",success:function(a){updateLastSuccessfulInternetPing();colorConsole("internet connection check succeeded: "+
remoteAssetToCheckForInHealthCheck,"green","14px");sampleThisHighVolumeGAEvent({name:"internet-connection-check-SUCCESS"});b&&"navigator-online"==b&&(colorConsole("checkInternetConnection triggered from navigator.onLine.  Current ts: "+new Date,"green","14px"),___getPhoneStatus(),checkForExistingPhoneLiveViewPopout({get_latest_notifs_for_existing:!0}),"CRX"==clientRunningScript&&colorConsole("checkInternetConnection triggered from navigator.onLine.  User is on CRX and previously established a PUSH socket. Checking PUSH Socket health now.",
"green","14px"),checkPushSocket(0));"CRX"!=clientRunningScript?(removeAllAppHealthNetworkNotifications(),removeOfflineWarningSpinnerFromNotif()):"undefined"!=typeof frdSocket&&(colorConsole("User is on CRX and have previously established a PUSH socket. Making sure browser action icon is set to teal and that they have context menus.","green","14px"),setBrowserActionIcon("user-logged-in"),addContextMenusAndPageAction())},error:function(){removeOfflineWarningSpinnerFromNotif();sampleThisHighVolumeGAEvent({name:"internet-connection-check-ERROR"});
a&&a()}})):(a&&a(),removeOfflineWarningSpinnerFromNotif())}
function setNetworkEventListenersAndGlobalAjaxMethods(){if(!globalShouldPerformGlobalAppHealthCheck)return!1;colorConsole("Setting listeners for user network events and global ajax methods.","blue","14px");window.addEventListener("online",function(){colorConsole("User gained network connection.","blue","14px");setTimeout(function(){checkInternetConnection(!1,"navigator-online");sampleThisHighVolumeGAEvent({name:"navigator-online-listener-triggered"})},5E3)});window.addEventListener("offline",function(){colorConsole("User lost network connection.",
"blue","14px");checkInternetConnection(determinedNoInternetConnection)});$(document).ajaxSend(function(a,b){!1===navigator.onLine&&determinedNoInternetConnection()});$(document).ajaxSuccess(function(a,b){updateLastSuccessfulInternetPing()})}
function masterAppHealthCheck(){if(!globalShouldPerformGlobalAppHealthCheck)return!1;var a=ts_last_js_running;ts_last_js_running=new Date;colorConsole("Inside of masterAppHealthCheck.  Checking user internet connectivity last confirmed ("+getSecondsSinceTimeStamp(ts_last_internet_ping)+" seconds ago) and js staleness ("+getSecondsSinceTimeStamp(a)+" seconds ago) (non CRX only)","purple","14px");245<getSecondsSinceTimeStamp(ts_last_internet_ping)&&(colorConsole("It has been too long since ts_last_internet_ping was updated. Checking user internet connection",
"purple","14px"),checkInternetConnection(determinedNoInternetConnection),sampleThisHighVolumeGAEvent({name:"internet-connection-stale",label:getSecondsSinceTimeStamp(ts_last_internet_ping).toString()}));600<getSecondsSinceTimeStamp(a)&&"CRX"!=clientRunningScript&&(sampleThisHighVolumeGAEvent({name:"js-stale-detected"}),colorConsole("User has stale JS","purple","14px"),checkInternetConnection(),setTimeout(function(){informUserOfStaleApp()},5500))}
function getSecondsSinceTimeStamp(a){return moment(new Date).diff(moment(a),"seconds")}function updateLastSuccessfulInternetPing(){if(!globalShouldPerformGlobalAppHealthCheck)return!1;colorConsole("Updating ts_last_internet_ping to: "+new Date,"blue","14px");ts_last_internet_ping=new Date}
function informUserOfStaleApp(){if(!globalShouldPerformGlobalAppHealthCheck)return!1;if("CLASSIC"==threadDisplayModeGlobal||"POWERVIEW"==threadDisplayModeGlobal){var a=getLanguageSpecificText("stale_app_warning_1",globalDefaultLanguage)+" "+getLanguageSpecificText("stale_app_warning_2",globalDefaultLanguage)+' <span id="stale-js-warning-reload" onclick="location.reload()" class="app-health-warning-action-span">'+getLanguageSpecificText("stale_app_warning_3",globalDefaultLanguage)+"</span>";6>getSecondsSinceTimeStamp(ts_last_internet_ping)&&
navigator.onLine&&(a=getLanguageSpecificText("stale_app_warning_1",globalDefaultLanguage)+'<br><br><span id="stale-js-warning-reload" onclick="location.reload()" class="app-health-warning-action-span">'+getLanguageSpecificText("click_to_reload",globalDefaultLanguage)+"</span>");$.each($("#stale-js-warning-reload"),function(){$(this).parent().siblings(".customClose").click()});displayAlertMessage(a,"error",6E5)}}
function determinedNoInternetConnection(){colorConsole("Determined that the user has no internet connection.","red","14px");if("CRX"==clientRunningScript)setBrowserActionIcon("no-internet");else{removeAllAppHealthNetworkNotifications();var a=$('<div id="internet-connectivity-warning" class="app-health-warning"><div class="app-health-warning-text">'+getLanguageSpecificText("offline",globalDefaultLanguage)+' <span id="check-network-connection-span-in-network-notif" class="app-health-warning-action-span"><i class="fa fa-fw fa-rotate-right"></i></span></div></div>').prependTo("body");
$(a).find("#check-network-connection-span-in-network-notif").click(function(){$(this).children(".fa").removeClass("fa-rotate-right").addClass("fa-circle-o-notch fa-spin");checkInternetConnection();_gaq.push(["_trackEvent","App-Checker","user-triggered-internet-request-from-offline-warning"])})}}
function removeOfflineWarningSpinnerFromNotif(){setTimeout(function(){0<$("#check-network-connection-span-in-network-notif").length&&$("#check-network-connection-span-in-network-notif").children(".fa").removeClass("fa-circle-o-notch fa-spin").addClass("fa-rotate-right")},1500)}function removeAllAppHealthNetworkNotifications(){$.each($("#internet-connectivity-warning"),function(){$(this).remove()})}
function initializeAppHealthCheck(){if(!globalShouldPerformGlobalAppHealthCheck)return!1;colorConsole("inside of initializeAppHealthCheck, calling masterAppHealthCheck every 30 seconds to determine user internet connectivity and stale js","purple","14px");setInterval(function(){masterAppHealthCheck()},3E4)}
function checkPushSocket(a){3>a?(colorConsole("In checkPushSocket count: "+a,"#419ab1","14px"),sampleThisHighVolumeGAEvent({name:"check-capi-socket-triggered-attempt-"+a.toString()}),"CRX"!=clientRunningScript?sendCAPITestMessageFromWebApp("CAPI_HEALTH_CHECK_FROM_CRX_DEC_2017"):invokeHealthCheckPush(),setTimeout(function(){checkLastTimePUSHWasReceived(a)},1E4)):(colorConsole("No incoming PUSHES after 3 tries. Will reload CRX in 3 seconds","#419ab1","14px"),"CRX"!=clientRunningScript?(sampleThisHighVolumeGAEvent({name:"check-capi-socket-failed-3-times-reopen-socket"}),
colorConsole("In checkPushSocket count > = 3.  checking internet connection then close socket","#419ab1","14px"),checkInternetConnectionOutbound(close_socket_then_channel_api_token_setup)):(colorConsole("PUSH socket unstable. Will reload CRX in 3 seconds","#419ab1","14px"),sampleThisHighVolumeGAEvent({name:"check-capi-socket-failed-3-times-restart-CRX"}),setTimeout(function(){forceReloadCRX("App-Health-Failed-Reestablish-CAPI")},500)))}
function checkLastTimePUSHWasReceived(a){var b=((new Date).getTime()-global_time_last_push_rcvd.getTime())/1E3;colorConsole("Inside of checkLastTimePUSHWasReceived.  Last PUSH received: "+b+" seconds ago.","#419ab1","14px");30>b?(sampleThisHighVolumeGAEvent({name:"check-capi-socket-is-healthy"}),___getPhoneStatus(),colorConsole("PUSH socket is good, don't reload CRX. Make sure that the Browser Action Icon accurately reflects that the crx is STABLE and request a new phone status update.","green","18px")):
(colorConsole("Inside of checkLastTimePUSHWasReceived.  FAILURE.","#419ab1","14px"),a++,checkPushSocket(a))}function colorConsole(a,b,c){console.log("%c"+a,"color: "+(b?b:"blue")+";font-size: "+(c?c:"large"))}function sampleThisHighVolumeGAEvent(a){var b=10,c="-10pct-sample",d=a.name;"CRX"==clientRunningScript&&(b=100,c="-1pct-sample");c=["_trackEvent","App-Checker",d+c];a.hasOwnProperty("label")&&c.push(a.label);5==getRandomInt(0,b)&&_gaq.push(c)};
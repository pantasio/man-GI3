function openMTPushSocket(a){a=void 0===a?{}:a;var d=a.channel,b=a.push_url,e=moment(a.date),f=e.clone().add(50,"seconds"),c=io(b,{reconnectionAttempts:1E3,reconnectionDelay:5E3,reconnectionDelayMax:15E3,query:a,timestampRequests:!0});c.on("connect",function(){pushSocketOpenedActions();pushServiceLogger(buildMTPushLogTag()+"[Socket ID: "+c.id+"][Channel: "+d+"] socket connected!")});c.on(a.event,function(a){JSON.parse(a.message.data);pushServiceLogger(buildMTPushLogTag()+" Received MT push on channel: "+
a.channel);handlePushSocketOnMessageForBabySitter(a.message);processIncomingPUSH(a.message.data)});c.on("connect_error",function(a){pushServiceLogger(buildMTPushLogTag()+" socket connect error!");console.error(a)});c.on("disconnect",function(a){pushSocketClosedActions();pushServiceLogger(buildMTPushLogTag()+" socket disconnected because: "+a)});c.on("reconnect_attempt",function(a){pushServiceLogger(buildMTPushLogTag()+" socket reconnect attempt #: "+a+".  Time since last signature rcvd: "+moment().diff(e)+
".  Should we get a new token? "+moment().isAfter(f));moment().isAfter(f)&&(pushServiceLogger(buildMTPushLogTag()+" socket signature has expired.  We should request a new one from GAE."),checkInternetConnectionOutbound(closeAndReestablishMTPushSocket))});c.on("reconnect_failed",function(){pushServiceLogger(buildMTPushLogTag()+" socket reconnect failed")});c.on("reconnect",function(){pushServiceLogger(buildMTPushLogTag()+" socket reconnect success")});c.on("ping",function(){pushServiceLogger(buildMTPushLogTag()+
' socket sending "ping" event.')});c.on("pong",function(a){pushServiceLogger(buildMTPushLogTag()+' socket "pong" event.  Time since last "ping" received: '+a+"ms")});window.closeMTSocket=function(){c.disconnect()}}function buildMTPushLogTag(){return"[tyson]"}function closeAndReestablishMTPushSocket(){try{getMTPushSetupInfo({optional_push_setup_success_callback:function(){closeMTSocket()}})}catch(a){console.error("Error occurred trying to re-establish push socket")}}
function getMTPushSetupInfo(a){a=void 0===a?{}:a;var d=0;"attempt"in a&&(d=a.attempt);if(3>d)pushServiceLogger("client push setup attempt #:"+d),$.ajax({type:"POST",url:baseUrl+"/client-push-setup"+buildClientSpecificRequestParamsForLogging()+"&push_type="+pushProvider,dataType:"json",beforeSend:function(){(new Date).getTime()},timeout:4E3,xhrFields:{withCredentials:!0},success:function(b){console.info("[MT PUSH] client-push-setup req response",b);"ok"in b&&!0===b.ok?(pushServiceLogger("client push setup success!",
b),"function"==typeof a.optional_push_setup_success_callback&&a.optional_push_setup_success_callback(),openMTPushSocket(b)):("init_app_load"in a&&setTimeout(function(){var b=$.extend(a,{attempt:++d});getMTPushSetupInfo(b)},3E3),console.error("Error, unrecognized response in client-push-setup req",b))},error:function(){console.info(a);"init_app_load"in a&&setTimeout(function(){var b=$.extend(a,{attempt:++d});getMTPushSetupInfo(b)},3E3)}});else try{recordPUSHHealthCheckEvent({push_type:"push-socket-setup-info-final-failure",
sub_type:pushProvider,attempt:1,success:0,completion_time:0})}catch(b){console.error("Error occurred while trying to record MT Stats event for socket reestablishment",b)}}function retrieveSocketIOJsLib(){$.ajax({type:"GET",url:"https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.0.4/socket.io.js",timeout:1E4,cache:!1,dataType:"script",success:function(){getMTPushSetupInfo({init_app_load:!0})}})};
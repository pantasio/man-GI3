var pusherActiveClientPollerID=0;
function initPusherApp(b){b=void 0===b?{}:b;var a=b.app_details;Pusher.Runtime.createXHR=function(){var a=new XMLHttpRequest;a.withCredentials=!0;return a};var d=new Pusher(a.app_key,{authEndpoint:baseUrl+"/pusher-auth?client=webapp&app_version="+manifest.version,excrypted:!0,cluster:a.cluster,disableStats:!0});d.subscribe(a.channel).bind(a.event,function(c){pushServiceLogger("Received pusher message on channel: "+a.channel);console.info("[PUSHER]",c);handlePushSocketOnMessageForBabySitter(c.message,"pusher");
processIncomingPUSH(c.message.data)});d.connection.bind("state_change",function(c){var b=c.current;pushServiceLogger('Socket state changed.  Previous state: "'+c.previous+'". Current state: "'+b+'".');"connected"==b?(pushServiceLogger('Subscribed to pusher channel: "'+a.channel+'" and event: "'+a.event+'". Current pusher connection state "'+d.connection.state+'"'),pushSocketOpenedActions(),startPusherActiveSessionPoller()):"failed"==b?(recordPUSHHealthCheckEvent({push_type:"push-socket-open",sub_type:pushProvider,
attempt:1,success:0,completion_time:0}),pushServiceLogger('Unable to subscribe to pusher channel: "'+a.channel+'".',"error")):"disconnected"==b&&(pushServiceLogger("Socket closed!"),pushSocketClosedActions())});window.pusherSocketState=d.connection.state;window.closePusherSocket=function(){d.disconnect();pushServiceLogger("Closing socket!")}}
function closeAndOpenNewPusherSocket(){closePusherSocket();setTimeout(function(){"undefined"!=typeof pusherSocketState&&"connected"!=pusherSocketState&&retrievePusherSetupInfo()},1E3)}
function retrievePusherSetupInfo(b){$.ajax({type:"POST",url:baseUrl+"/pusher-setup"+buildClientSpecificRequestParamsForLogging(),dataType:"json",timeout:1E4,xhrFields:{withCredentials:!0},success:function(a){console.info("[PUSHER] Response from server for request to /pusher-setup: ",a);initPusherApp({app_details:a})},error:function(){pushServiceLogger("Connection error occurred while making request to get push setup info","error")}})}
function retrievePusherJSLib(){$.ajax({type:"GET",url:"https://js.pusher.com/4.1/pusher.min.js",dataType:"script",success:function(){pushServiceLogger("Success! Retrieved Pusher JS Lib");retrievePusherSetupInfo()},error:function(){pushServiceLogger("Unable to retrieve Pusher JS Lib","error")}})};
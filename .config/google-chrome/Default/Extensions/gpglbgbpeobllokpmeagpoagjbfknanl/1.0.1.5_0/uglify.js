function nextTick(cb){setTimeout(cb,0)}function make4Len16(len){var len16=len.toString(16);while(len16.length<4){len16="0"+len16}return len16}var pendingFuncs;window.addEventListener("message",function(){if(pendingFuncs){$.each(pendingFuncs,function(i,func){func()});pendingFuncs=null}},false);function unsafeCallback(cb){return cb}function ab2str(buf){if(buf.constructor.name=="ArrayBuffer"){buf=new Uint8Array(buf)}return String.fromCharCode.apply(null,buf)}function str2ab(str,buf,terminate){var len=str.length;if(terminate)len++;if(!buf){buf=new ArrayBuffer(len)}var bufView=new Uint8Array(buf);if(terminate)bufView[str.length]=0;for(var i=0,strLen=str.length;i<strLen;i++){bufView[i]=str.charCodeAt(i)}return buf}var slashN="\n".charCodeAt(0);function writeLine(socket,str,cb){if(str.constructor.name=="Object")str=JSON.stringify(str);writeString(socket,str+"\n",cb)}function readLine(socket,cb){var pending=[];function readMore(){socket.read(function(buffer){for(var i=0;i<buffer.byteLength;i++){if(buffer[i]==slashN){var keep=buffer.subarray(0,i);pending.push(keep);var data="";for(var b in pending){b=pending[b];data+=ab2str(b)}var remaining=buffer.subarray(i+1);socket.unshift(remaining);cb(data);return}}pending.push(buffer);readMore()})}readMore()}function readString(socket,cb){var str="";socket.onClose=function(){cb(str)};function reader(data){str+=ab2str(data);socket.read(reader)}socket.read(reader)}function writeString(socket,str,cb){if(str.constructor.name=="Object")str=JSON.stringify(str);socket.write(str2ab(str),cb)}function appendBuffer(buffer1,buffer2){var tmp=new Uint8Array(buffer1.byteLength+buffer2.byteLength);tmp.set(buffer1,0);tmp.set(buffer2,buffer1.byteLength);return tmp}var timeThing=(new Date).getTime();function timeTrace(stamp){var now=(new Date).getTime();console.log(stamp+": "+(now-timeThing));timeThing=now}function bufferToHex(buffer){var view=new Uint8Array(buffer);var ret="";for(var b in view){b=view[b];if(b<16)ret+="0"+b.toString(16);else ret+=b.toString(16)}return ret}function hexToBuffer(str){var buf=new ArrayBuffer(str.length/2);var view=new Uint8Array(buf);for(var i=0;i<str.length/2;i++){var c=str.substr(i*2,2);view[i]=parseInt(c,16)}return buf}function base64ToArrayBuffer(base64){var binary_string=window.atob(base64);var len=binary_string.length;var bytes=new Uint8Array(len);for(var i=0;i<len;i++){var ascii=binary_string.charCodeAt(i);bytes[i]=ascii}return bytes.buffer}function arrayBufferToBase64(buffer){var binary="";var bytes=new Uint8Array(buffer);var len=bytes.byteLength;for(var i=0;i<len;i++){binary+=String.fromCharCode(bytes[i])}return window.btoa(binary)}var b64map="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";var b64pad="=";function hex2b64(h){var i;var c;var ret="";for(i=0;i+3<=h.length;i+=3){c=parseInt(h.substring(i,i+3),16);ret+=b64map.charAt(c>>6)+b64map.charAt(c&63)}if(i+1==h.length){c=parseInt(h.substring(i,i+1),16);ret+=b64map.charAt(c<<2)}else if(i+2==h.length){c=parseInt(h.substring(i,i+2),16);ret+=b64map.charAt(c>>2)+b64map.charAt((c&3)<<4)}while((ret.length&3)>0){ret+=b64pad}return ret}if(!String.prototype.startsWith){Object.defineProperty(String.prototype,"startsWith",{enumerable:false,configurable:false,writable:false,value:function(searchString,position){position=position||0;return this.lastIndexOf(searchString,position)===position}})}function getQueryVariable(variable,url){if(!url)url=window.location;var query=url.search.substring(1);var vars=query.split("&");for(var i=0;i<vars.length;i++){var pair=vars[i].split("=");if(decodeURIComponent(pair[0])==variable){return decodeURIComponent(pair[1])}}}Object.fromArray=function(arr){var ret={};for(var i in arr){var val=arr[i];ret[val]=val}return ret};$.ajaxTransport("+binary",function(options,originalOptions,jqXHR){if(window.FormData&&(options.dataType&&options.dataType=="binary"||options.data&&(window.ArrayBuffer&&options.data instanceof ArrayBuffer||window.Blob&&options.data instanceof Blob))){return{send:function(headers,callback){var xhr=new XMLHttpRequest,url=options.url,type=options.type,async=options.async||true,dataType=options.responseType||"blob",data=options.data||null,username=options.username||null,password=options.password||null;xhr.addEventListener("load",function(){var data={};data[options.dataType]=xhr.response;callback(xhr.status,xhr.statusText,data,xhr.getAllResponseHeaders())});xhr.open(type,url,async,username,password);for(var i in headers){xhr.setRequestHeader(i,headers[i])}xhr.responseType=dataType;xhr.send(data)},abort:function(){jqXHR.abort()}}}});function throttleTimeout(token,item,throttle,cb){if(token){clearTimeout(token.timeout)}else{token={items:[]}}token.timeout=setTimeout(function(){cb(token.items);token.items=[]},throttle);token.items.push(item);return token}function copyTextToClipboard(text){var textArea=document.createElement("textarea");textArea.style.position="fixed";textArea.style.top=0;textArea.style.left=0;textArea.style.width="2em";textArea.style.height="2em";textArea.style.padding=0;textArea.style.border="none";textArea.style.outline="none";textArea.style.boxShadow="none";textArea.style.background="transparent";textArea.value=text;document.body.appendChild(textArea);textArea.select();try{var successful=document.execCommand("copy")}catch(err){console.log("Oops, unable to copy")}document.body.removeChild(textArea)}function showNotification(text,iconUrl){iconUrl=iconUrl||"/icon.png";console.log("notification:",text);if(!window.chrome||!window.chrome.notifications)return;var appName=chrome.runtime.getManifest().name;chrome.notifications.create({type:"basic",iconUrl:iconUrl,title:appName,message:text})}var blobFromUrl=function(){var cache={};return function(url,cb){if(cache[url]){cb(cache[url]);return}var xhr=new XMLHttpRequest;xhr.open("GET",url,true);xhr.responseType="blob";xhr.onload=function(e){cb(cache[url]=window.URL.createObjectURL(this.response))};xhr.send()}}();if(window.chrome&&window.chrome.sockets){chrome.sockets.tcp.onReceive.addListener(function(resultData){var socket=Socket.readers[resultData.socketId];if(socket==null)return;socket.dataReceived(new Uint8Array(resultData.data))});chrome.sockets.tcp.onReceiveError.addListener(function(resultData){var socket=Socket.readers[resultData.socketId];if(socket==null)return;socket.destroy();socket.dataReceived(null)});chrome.sockets.tcpServer.onAccept.addListener(function(acceptInfo){chrome.sockets.tcp.setPaused(acceptInfo.clientSocketId,false);var listener=Server.listeners[acceptInfo.socketId];if(listener==null)return;listener(new Socket({socketId:acceptInfo.clientSocketId}))})}(function(){function Socket(options,cb){if(options.socketId){this.socketId=options.socketId;Socket.readers[this.socketId]=this}else if(window.chrome&&window.chrome.sockets){chrome.sockets.tcp.create(function(createInfo){this.socketId=createInfo.socketId;chrome.sockets.tcp.connect(this.socketId,options.host,options.port,function(result){if(!result){Socket.readers[createInfo.socketId]=this;cb(this)}else{chrome.runtime.lastError;this.destroy();cb(null)}}.bind(this))}.bind(this))}else{var connected;if(!options.ns){this.ns=new require("net").Socket();this.ns.connect({port:options.port,host:options.host},function(){connected=true;cb(this)}.bind(this))}else{this.ns=options.ns;connected=true}this.ns.on("close",function(){this.destroy();if(!connected)cb(null)}.bind(this));this.ns.on("data",function(d){this.dataReceived(d)}.bind(this))}}Socket.readers={};Socket.connect=function(options,cb){return new Socket(options,cb)};Socket.pump=function(s1,s2,cb){if(!s1||!s2){console.error("Socket.pump called with null socket",s1,s2);cb();return}var writeDone=function(){s1.read(reader)}.bind(s1);var reader=function(data){var buffer=data.buffer;if(data.byteOffset||data.length!=buffer.byteLength){buffer=buffer.slice(data.byteOffset,data.byteOffset+data.length)}s2.write(buffer,writeDone)}.bind(s2);s1.read(reader);s1.onClose=cb};Socket.stream=function(s1,s2,cb){Socket.pump(s1,s2,function(){if(s2)s2.destroy();if(cb){var tmp=cb;cb=null;tmp()}});Socket.pump(s2,s1,function(){if(s1)s1.destroy();if(cb){var tmp=cb;cb=null;tmp()}})};Socket.eat=function(s){function reader(){s.read(reader)}reader()};Socket.prototype.read=function(){if(this.pendingCallback){throw new Error("double callback")}if(this.closed&&!this.pending){var cb=this.onClose;if(cb){delete this.onClose;cb()}return}var argc=0;if(arguments[argc].constructor.name=="Number"){this.pendingLength=arguments[argc++]}else{this.pendingLength=0}var cb=arguments[argc];if(!this.pending||this.paused){this.pendingCallback=cb;return}if(!this.pendingLength){this.pendingLength=this.buffered()}else if(this.pendingLength>this.buffered()){this.pendingCallback=cb;return}var data;var totalRead=0;while(totalRead<this.pendingLength){var buf=this.pending.shift();this.bufferedLength-=buf.length;if(!this.pending.length)delete this.pending;var add=buf;var need=Math.min(add.byteLength,this.pendingLength-totalRead);if(need!=add.byteLength){var part=add.subarray(0,need);var leftover=add.subarray(need);this.unshift(leftover);add=part}if(!data&&add.byteLength!=this.pendingLength)data=new Uint8Array(this.pendingLength);if(data){data.set(add,totalRead)}else{data=add}totalRead+=add.byteLength}cb(data)};Socket.prototype.write=function(data,cb){if(this.pendingWrite)console.error("write is already in progress!");if(cb==null){console.error("write callback is null?");cb=function(){}}this.pendingWrite=cb;if(window.chrome&&window.chrome.sockets){chrome.sockets.tcp.send(this.socketId,data,function(writeInfo){chrome.runtime.lastError;if(!writeInfo||writeInfo.resultCode){delete this.pendingWrite;return}if(writeInfo.bytesSent<data.byteLength){this.write(data.slice(writeInfo.bytesSent),cb)}else{delete this.pendingWrite;cb()}}.bind(this))}else{if(!this.ns)return;if(!data.byteLength){require("process").nextTick(function(){delete this.pendingWrite;cb()}.bind(this));return}this.ns.write(Buffer.from(data),function(){delete this.pendingWrite;cb()}.bind(this))}};Socket.prototype.destroy=function(data,cb){if(window.chrome&&window.chrome.sockets){chrome.sockets.tcp.close(this.socketId,function(){chrome.runtime.lastError})}else{this.dataReceived(null);if(this.ns){this.ns.destroy();delete this.ns}}};Socket.prototype.unshift=function(buffer){if(buffer.byteLength==0)return;if(!this.pending)this.pending=[buffer];else this.pending.unshift(buffer);if(!this.bufferedLength)this.bufferedLength=0;this.bufferedLength+=buffer.length};Socket.prototype.dataReceived=function(payload){if(payload){if(payload.asUint8Array)payload=payload.asUint8Array();if(payload.constructor==ArrayBuffer)payload=new Uint8Array(payload)}if(payload&&payload.length){var arr=new Uint8Array(payload);if(!this.pending)this.pending=[arr];else this.pending.push(arr)}if(payload==null){this.closed=true}else{if(!this.bufferedLength)this.bufferedLength=0;this.bufferedLength+=payload.length}if(this.paused||!this.pending||!this.pending.length){var cb=this.onClose;if(this.closed&&cb){delete this.onClose;cb()}return}var pl=this.pendingLength;var cb=this.pendingCallback;if(cb){delete this.pendingCallback;this.read(pl,cb)}};Socket.prototype.buffered=function(){return this.bufferedLength};Socket.prototype.pause=function(){if(this.paused){return}this.paused=true;this.onPause()};Socket.prototype.resume=function(){if(!this.paused){return}this.paused=false;this.onResume()};Socket.prototype.onResume=function(){chrome.sockets.tcp.setPaused(this.socketId,false,function(){})};Socket.prototype.onPause=function(){chrome.sockets.tcp.setPaused(this.socketId,true,function(){})};function Server(){}Server.listeners={};Server.prototype.__proto__=Socket.prototype;Server.prototype.destroy=function(){if(window.chrome&&window.chrome.sockets){chrome.sockets.tcpServer.close(this.socketId,function(){chrome.runtime.lastError})}else{if(this.ns){this.ns.close();delete this.ns}}};Server.prototype.listen=function(args,cb,listening){var port;var address;if(args.constructor.name=="Number"){port=args;address="0.0.0.0"}else{address=args.address;port=args.port}if(window.chrome&&window.chrome.sockets){chrome.sockets.tcpServer.create(function(createInfo){this.socketId=createInfo.socketId;Server.listeners[this.socketId]=cb;chrome.sockets.tcpServer.listen(createInfo.socketId,address,port,function(result){chrome.runtime.lastError;if(result){this.destroy();if(listening){listening(result)}return}chrome.sockets.tcpServer.getInfo(this.socketId,function(info){this.localAddress=info.localAddress;this.localPort=info.localPort;if(listening){listening(result)}}.bind(this))}.bind(this))}.bind(this))}else{this.ns=require("net").createServer(function(s){cb(new Socket({ns:s}))}.bind(this));this.ns.on("close",function(){this.destroy()}.bind(this));this.ns.on("error",function(e){if(listening)listening(e)}.bind(this));this.ns.on("listening",function(){var info=this.ns.address();this.localAddress=info.address;this.localPort=info.port;if(listening)listening()}.bind(this));this.ns.listen({port:port,host:address})}};window.Socket=Socket;window.Server=Server})();(function(){function AdbUsbTransport(handle,iface){this.handle=handle;this.iface=iface;this.type="usb";for(var endpoint in iface.endpoints){endpoint=iface.endpoints[endpoint];if(endpoint.type=="bulk"){this.zero_mask=endpoint.maximumPacketSize-1;if(endpoint.direction=="in"){this.in=endpoint}else{this.out=endpoint}}}}AdbUsbTransport.prototype.destroy=function(){chrome.usb.releaseInterface(this.handle,this.iface.interfaceNumber,function(){chrome.runtime.lastError;chrome.usb.closeDevice(this.handle,function(){chrome.runtime.lastError})}.bind(this))};AdbUsbTransport.prototype.write=function(data,callback){if(this.writing){if(!this.pendingWrites)this.pendingWrites=[];this.pendingWrites.push({data:data,callback:callback});return}var transfer={direction:"out",endpoint:this.out.address,data:data};this.writing=true;chrome.usb.bulkTransfer(this.handle,transfer,function(result){chrome.runtime.lastError;this.writing=false;callback(result);if(!this.pendingWrites)return;var next=this.pendingWrites.shift();if(!this.pendingWrites.length)this.pendingWrites=null;this.write(next.data,next.callback)}.bind(this))};AdbUsbTransport.prototype.read=function(len,cb){var transfer={direction:"in",endpoint:this.in.address,length:len};chrome.usb.bulkTransfer(this.handle,transfer,function(result){chrome.runtime.lastError;cb(result)})};function AdbTcpTransport(socket){this.socket=socket;this.zero_mask=(1<<30)-1;this.type="tcp";socket.onClose=function(){var cb=this.currentRead;if(cb){delete this.currentRead;cb({resultCode:-1})}}.bind(this)}AdbTcpTransport.prototype.destroy=function(){this.socket.destroy()};AdbTcpTransport.prototype.write=function(data,callback){if(this.writing){if(!this.pendingWrites)this.pendingWrites=[];this.pendingWrites.push({data:data,callback:callback});return}this.writing=true;this.socket.write(data,function(){this.writing=false;callback({resultCode:0});if(!this.pendingWrites)return;var next=this.pendingWrites.shift();if(!this.pendingWrites.length)this.pendingWrites=null;this.write(next.data,next.callback)}.bind(this))};AdbTcpTransport.prototype.read=function(len,cb){this.currentRead=cb;this.socket.read(len,function(data){delete this.currentRead;cb({resultCode:0,data:data.buffer.slice(data.byteOffset,data.byteOffset+data.byteLength)})})};function AdbDevice(transport,cb){this.onConnected=cb;this.transport=transport;this.currentSocketId=0;this.sockets={};this.forwards={};this.maxPayload=AdbDevice.MAX_PAYLOAD}AdbDevice.prototype.fatal=function(e){console.log("fatal error",JSON.stringify(e));var cb=this.onConnected;if(cb){delete this.onConnected;cb()}else if(this.onError){this.onError();delete this.onError}this.destroy()};AdbDevice.prototype.destroy=function(){for(var socket in this.sockets){socket=this.sockets[socket];socket.dataReceived(null)}if(this.forwards){$.each(this.forwards,function(port,listener){listener.destroy()})}this.transport.destroy()};AdbDevice.kCommandSYNC=1129208147,AdbDevice.kCommandCNXN=1314410051,AdbDevice.kCommandOPEN=1313165391,AdbDevice.kCommandOKAY=1497451343,AdbDevice.kCommandCLSE=1163086915,AdbDevice.kCommandWRTE=1163154007,AdbDevice.kCommandAUTH=1213486401;AdbDevice.kAuthToken=1;AdbDevice.kAuthSignature=2;AdbDevice.kAuthRSAPublicKey=3;AdbDevice.ADB_PROTOCOL_VERSION=16777216;AdbDevice.ADB_VERSION=36;AdbDevice.MAX_PAYLOAD=4096;AdbDevice.checksum=function(data){data=new Uint8Array(data);var sum=0;for(var i=0;i<data.byteLength;i++){sum+=data[i]}return sum&4294967295};AdbDevice.prototype.sendMessage=function(command,arg0,arg1,payload,cb){if(!payload){payload=""}if(payload.constructor.name=="String"){payload=str2ab(payload)}var appendZero=true;if(!payload.byteLength){appendZero=false}if(command==AdbDevice.kCommandAUTH&&arg0==AdbDevice.kAuthSignature){appendZero=false}if(command==AdbDevice.kCommandWRTE){appendZero=false}var bodyLength=payload.byteLength;if(appendZero){bodyLength++}if(appendZero){var copy=new ArrayBuffer(payload.byteLength+1);var view=new Uint8Array(copy);view.set(new Uint8Array(payload));view[copy.byteLength-1]=0;payload=copy}var header=new ArrayBuffer(24);var view=new DataView(header);view.setUint32(0,command,true);view.setUint32(4,arg0,true);view.setUint32(8,arg1,true);view.setUint32(12,bodyLength,true);view.setUint32(16,AdbDevice.checksum(payload),true);view.setUint32(20,command^4294967295,true);this.transport.write(header,function(result){if(result.resultCode){this.fatal(result)}if(!payload.byteLength&&cb){cb()}}.bind(this));if(payload.byteLength){this.transport.write(payload,function(result){if(result.resultCode){this.fatal(result)}if(cb){cb()}}.bind(this))}};AdbDevice.prototype.getKey=function(cb){chrome.storage.local.get("adbkey",function(result){var adbkey=result.adbkey;var key=new JSEncrypt({default_key_size:2048});if(!adbkey){adbkey=key.getPrivateKeyB64();key.setPrivateKey(adbkey);chrome.storage.local.set({adbkey:adbkey})}else{key.setPrivateKey(adbkey)}cb(key)})};AdbDevice.prototype._convertToMinCrypt=function(rsaKey){var bitLength=2048;var numWords=bitLength/8/4;var B32=BigInteger.ONE.shiftLeft(32);var N=rsaKey.n.clone();var R=BigInteger.ONE.shiftLeft(1).pow(bitLength);var RR=R.multiply(R).mod(N);var pkey=new Uint32Array(3+numWords*2);pkey[0]=numWords;pkey[1]=B32.subtract(N.modInverse(B32)).intValue();var iEnd=numWords+2;for(var i=2,j=2+numWords;i<iEnd;++i,++j){pkey[i]=N.mod(B32).intValue();N=N.divide(B32);pkey[j]=RR.mod(B32).intValue();RR=RR.divide(B32)}pkey[pkey.length-1]=rsaKey.e;var hexStr="";var u8view=new Uint8Array(pkey.buffer);for(var i=0;i<u8view.length;++i){var digit=u8view[i].toString(16);if(digit.length==1){hexStr+="0"}hexStr+=digit}return hex2b64(hexStr)+" adb@chrome"};AdbDevice.prototype.sign=function(rsakey,data){if(rsakey==null){throw"AuthManager is not initialized"}var totalLen=2048/8;var array=new Uint8Array(totalLen);array[0]=0;array[1]=1;var ASN1_PREAMBLE=[0,48,33,48,9,6,5,43,14,3,2,26,5,0,4,20];var padEnd=totalLen-ASN1_PREAMBLE.length-data.byteLength;for(var i=2;i<padEnd;i++){array[i]=255}array.set(new Uint8Array(ASN1_PREAMBLE),padEnd);padEnd+=ASN1_PREAMBLE.length;array.set(new Uint8Array(data),padEnd);var msg=new BigInteger(Array.apply([],array));return new Uint8Array(rsakey.doPrivate(msg).toByteArray()).buffer};function parseConnectionPayload(payload){var ret={};if(payload.constructor.name!="String")payload=ab2str(payload);var splits=payload.replace("device::","").split(";");for(var split in splits){split=splits[split];var parts=split.split("=");if(parts.length==2){ret[parts[0]]=parts[1]}}return ret}AdbDevice.parseConnectionPayload=parseConnectionPayload;AdbDevice.prototype.handleUnknown=function(localId,remoteId){console.log("no idea what this socket is.");this.sendMessage(AdbDevice.kCommandCLSE,localId,remoteId)};AdbDevice.prototype.handleMessage=function(header,payload){var command=header.getUint32(0,true);var arg0=header.getUint32(4,true);var arg1=header.getUint32(8,true);var bodyLength=header.getUint32(12,true);var sum=header.getUint32(16,true);switch(command){case AdbDevice.kCommandOPEN:if(this.onOpenSocket)this.onOpenSocket(payload,arg0);break;case AdbDevice.kCommandAUTH:console.log("auth:",this);this.getKey(function(rsakey){if(this.sentSignature){var publicKey=this._convertToMinCrypt(rsakey.getKey());this.sendMessage(AdbDevice.kCommandAUTH,AdbDevice.kAuthRSAPublicKey,0,publicKey);showNotification('Check your Android device and click "Allow USB Debugging".')}else{this.sentSignature=true;var signed=this.sign(rsakey.getKey(),payload);this.sendMessage(AdbDevice.kCommandAUTH,AdbDevice.kAuthSignature,0,signed,function(){})}}.bind(this));break;case AdbDevice.kCommandOKAY:var remoteId=arg0;var localId=arg1;var socket=this.sockets[localId];if(!socket){this.handleUnknown(localId,remoteId);return}var cb=socket.onConnected;if(cb){delete socket.onConnected;socket.remoteId=remoteId;cb(socket)}var data=socket.pendingWrite;if(data){cb=socket.wrote;delete socket.wrote;delete socket.pendingWrite;socket.write(data,cb);return}cb=socket.wrote;if(cb){delete socket.wrote;cb()}break;case AdbDevice.kCommandCNXN:this.rawProperties=ab2str(payload);this.properties=parseConnectionPayload(payload);var cb=this.onConnected;if(cb){delete this.onConnected;cb(this)}break;case AdbDevice.kCommandWRTE:var remoteId=arg0;var localId=arg1;var socket=this.sockets[localId];if(!socket){this.handleUnknown(localId,remoteId);return}if(!socket.paused){this.sendMessage(AdbDevice.kCommandOKAY,socket.localId,socket.remoteId)}socket.dataReceived(new Uint8Array(payload));break;case AdbDevice.kCommandCLSE:var remoteId=arg0;var localId=arg1;var socket=this.sockets[localId];if(!socket){console.log("asked to close unknown socket?");return}delete this.sockets[localId];socket.destroy();var cb=socket.onConnected;if(cb){delete socket.onConnected;cb()}break;default:console.log("unknown command: ",command.toString(16),arg0,arg1,payload);break}};AdbDevice.prototype.onReceiveMessage=function(result){if(result.resultCode){this.fatal(result);return}var header=new DataView(result.data);var transferLen=header.getUint32(12,true);if(!transferLen){try{this.handleMessage(header,null)}finally{this.receiveMessages()}return}this.transport.read(transferLen,function(result){if(result.resultCode){this.fatal(result);return}var payload=result.data;if(AdbDevice.checksum(payload)!=header.getUint32(16,true)){this.receiveMessages();return}try{this.handleMessage(header,payload)}finally{this.receiveMessages()}}.bind(this))};AdbDevice.prototype.receiveMessages=function(){this.transport.read(24,this.onReceiveMessage.bind(this))};AdbDevice.prototype.forwardPort=function(args){var forwardingServer=new Server;forwardingServer.listen({port:args.fromPort,address:"127.0.0.1"},function(localSocket){this.newSocket(args.to,function(remoteSocket){if(remoteSocket)Socket.stream(localSocket,remoteSocket);else localSocket.destroy()}.bind(this))}.bind(this),function(){this.forwards[args.fromPort]=forwardingServer}.bind(this))};AdbDevice.prototype.newAdbSocket=function(socketId,cb){var socket;if(this.createSocket)socket=this.createSocket(socketId,cb);else socket=new AdbSocket(this,socketId,cb);return socket};AdbDevice.prototype.newSocket=function(service,cb){var socketId=++this.currentSocketId;this.sockets[socketId]=this.newAdbSocket(socketId,cb);this.sendMessage(AdbDevice.kCommandOPEN,socketId,0,service)};function AdbSocket(device,socketId,cb){if(!cb){cb=function(){}}this.device=device;this.localId=socketId;this.onConnected=cb}AdbSocket.prototype.write=function(data,cb){if(this.pendingWrite||this.wrote){console.log("bad adb socket state, already writing");throw new Error("bad adb socket state, already writing")}var toWrite=Math.min(this.device.transport.zero_mask,this.device.maxPayload);if(toWrite<data.byteLength){this.pendingWrite=data.slice(toWrite);data=data.slice(0,toWrite)}else{this.pendingWrite=null}this.wrote=cb;this.device.sendMessage(AdbDevice.kCommandWRTE,this.localId,this.remoteId,data)};AdbSocket.prototype.destroy=function(){this.device.sendMessage(AdbDevice.kCommandCLSE,this.localId,this.remoteId);this.dataReceived(null)};AdbSocket.prototype.buffered=Socket.prototype.buffered;AdbSocket.prototype.dataReceived=Socket.prototype.dataReceived;AdbSocket.prototype.read=Socket.prototype.read;AdbSocket.prototype.pause=Socket.prototype.pause;AdbSocket.prototype.resume=Socket.prototype.resume;AdbSocket.prototype.unshift=Socket.prototype.unshift;AdbSocket.prototype.onPause=function(){};AdbSocket.prototype.onResume=function(){this.device.sendMessage(AdbDevice.kCommandOKAY,this.localId,this.remoteId)};function connectUsbAdb(handle,iface,cb){console.log("connecting");var adb=new AdbDevice(new AdbUsbTransport(handle,iface),cb);console.log("sending CNXN");adb.sendMessage(AdbDevice.kCommandCNXN,AdbDevice.ADB_PROTOCOL_VERSION,AdbDevice.MAX_PAYLOAD,"host::");console.log("starting receive loop");adb.receiveMessages()}function AdbServer(options){var options=options||{};var port=options.port||5037;var start=options.start!==false;this.currentSocketId=0;this.pendingDevices={};this.port=port;this.adbDevices={};this.clients={};if(start){this.start()}}function _nowMs(){return(new Date).getTime()}AdbServer.prototype.start=function(){if(this.server){console.log("ADB Server started while already started");return}this.clients={};this.adbDevices={};this.pendingDevices={};this.refreshing={};var server=new Server;server.listen({port:this.port,address:"127.0.0.1"},function(socket){var client=new AdbClient(this,socket);var socketId=++this.currentSocketId;this.clients[socketId]=client;socket.onClose=function(){delete this.clients[socketId]}.bind(this);client.receiveHeader()}.bind(this),function(result){if(result){console.log("adb server failed to listen: "+result);return}console.log("ADB Server started");this.server=server;this.refresh()}.bind(this))};AdbServer.prototype.isRunning=function(){return this.server!=null};AdbServer.prototype.kill=function(){this.server.destroy();this.server=null;this.refreshing={};for(var client in this.clients){client=this.clients[client];client.socket.destroy()}this.clients={};for(var device in this.adbDevices){device=this.adbDevices[device];device.destroy()}this.adbDevices={};this.pendingDevices={}};AdbServer.prototype.selectDevice=function(cb){chrome.usb.getUserSelectedDevices({filters:[{interfaceClass:255,interfaceSubclass:66,interfaceProtocol:1}]},function(devices){for(var device in devices){device=devices[device];this.refreshDevice(device,cb)}}.bind(this))};AdbServer.prototype.withAdbDevice=function(adb,cb){adb.onError=function(){delete this.adbDevices[adb.serialno];this.internalOnDevicesChanged()}.bind(this);var withSerial=function(str){adb.serialno=str.trim();this.adbDevices[adb.serialno]=adb;console.log("found device: "+adb.serialno);this.internalOnDevicesChanged();cb(adb)}.bind(this);if(adb.serialno){withSerial(adb.serialno);return}adb.newSocket("shell:getprop ro.serialno",function(adbSocket){readString(adbSocket,function(str){withSerial(str)}.bind(this))}.bind(this))};AdbServer.prototype.tryDevice=function(handle,serialno,cb){var adbDevices=this.adbDevices;var pending=this.pendingDevices;var server=this;function tryInterface(i){var number=i.interfaceNumber;if(pending[number]){return false}pending[number]=handle;console.log("claiming:",JSON.stringify(handle),JSON.stringify(i));chrome.usb.claimInterface(handle,i.interfaceNumber,function(){console.log("claimed:",JSON.stringify(chrome.runtime.lastError));connectUsbAdb(handle,i,function(adb){if(!adb){delete pending[number];cb();return}adb.serialno=serialno;server.withAdbDevice(adb,function(adb){delete pending[number];cb(adb)})})});return true}chrome.usb.listInterfaces(handle,function(interfaces){if(!interfaces){console.log("unable list interfaces",JSON.stringify(chrome.runtime.lastError));if(cb)cb();return}console.log("got interfaces",JSON.stringify(interfaces));var usedHandle=false;for(var i in interfaces){i=interfaces[i];if(i.interfaceClass==255&&i.interfaceSubclass==66&&i.interfaceProtocol==1){usedHandle|=tryInterface(i)}}if(!usedHandle){chrome.usb.closeDevice(handle)}})};AdbServer.prototype.refreshDevice=function(device,cb){chrome.usb.openDevice(device,function(connectionHandle){if(!connectionHandle){console.log("unable to open device",JSON.stringify(chrome.runtime.lastError));if(cb)cb();return}this.start();this.tryDevice(connectionHandle,device.serialNumber,function(adb){if(adb){adb.usbDevice=device}cb(adb)})}.bind(this))};AdbServer.prototype.refresh=function(){if(!this.server){console.log("adb server refresh requested while server killed");return}var now=_nowMs();if(this.server.lastRefresh&&this.server.lastRefresh>now-1e4){return}this.server.lastRefresh=now;var vidpids=chrome.runtime.getManifest().permissions.pop().usbDevices;$(vidpids).each(function(index,vidpid){var key=vidpid.vendorId+"&"+vidpid.productId;if(this.refreshing[key]){return}this.refreshing[key]=true;chrome.usb.findDevices({productId:vidpid.productId,vendorId:vidpid.vendorId},function(devices){var waiting=devices.length;if(!waiting){delete this.refreshing[key];return}console.log("found:",vidpid,devices);for(var device in devices){console.log("trying:",devices[device]);this.tryDevice(devices[device],devices[device].serialNumber,function(){waiting--;if(!waiting){delete this.refreshing[key]}}.bind(this))}}.bind(this))}.bind(this))};AdbServer.prototype.internalOnDevicesChanged=function(){for(var client in this.clients){client=this.clients[client];if(!client.tracking)continue;var payload=client.getDevicesString();if(!payload.length)payload="0000\n";client.socket.write(str2ab(payload),function(){})}};AdbServer.prototype.stop=function(){this.server.destroy()};function AdbClient(server,socket){this.server=server;this.socket=socket}AdbClient.prototype.resolveTransport=function(transport,serialno){if(serialno){var ret=this.server.adbDevices[serialno];if(!ret)return"device not found";return ret}var num=Object.keys(this.server.adbDevices);if(num>1){return"more than one device"}if(num==0){return"no devices connected"}for(var device in this.server.adbDevices){return this.server.adbDevices[device]}};AdbClient.prototype.write=function(data,status,cb){if(!status){status="OKAY"}data=str2ab(data);var len=data.byteLength;var len16=make4Len16(len);len16=str2ab(status+len16);var payload=appendBuffer(new Uint8Array(len16),new Uint8Array(data)).buffer;if(!cb){cb=function(){this.socket.destroy()}.bind(this)}this.socket.write(payload,cb)};AdbClient.prototype.getDevicesString=function(options){var options=options||{};var longformDevices=options.longformDevices;var devices="";for(var device in this.server.adbDevices){device=this.server.adbDevices[device];devices+=device.serialno+"\tdevice";if(longformDevices){if(device.transport.type=="usb")devices+=" usb:"+device.transport.iface.interfaceNumber;else devices+=" tpcip:"+"something";devices+=" product:"+device.properties["ro.product.name"];devices+=" model:"+device.properties["ro.product.model"];devices+=" device:"+device.properties["ro.product.device"]}devices+="\n"}return devices};AdbClient.prototype.writeDevices=function(options,cb){this.write(this.getDevicesString(options),null,cb)};AdbClient.prototype.handlePayload=function(data){data=ab2str(data);var commandParts=data.split(":");var hostCmd=data;var serialno;if(commandParts[0]=="host-serial"){commandParts[0]="host";serialno=commandParts.splice(1,1)[0];if(Number.isInteger(parseInt(commandParts[1]))){serialno+=":"+commandParts.splice(1,1)[0]}}if(commandParts.length>=2)hostCmd=commandParts[0]+":"+commandParts[1];switch(hostCmd){case"host:version":this.write(make4Len16(AdbDevice.ADB_VERSION));break;case"host:devices-l":case"host:devices":var longformDevices=data=="host:devices-l";this.server.refresh();this.writeDevices({longformDevices:longformDevices});break;case"host:features":var transport=this.resolveTransport(data,serialno);if(transport.constructor.name=="String"){this.write(transport,"FAIL");break}var features=transport.properties.features;if(!features)features="";this.write(make4Len16(features));break;case"host:transport-usb":
case"host:transport-any":var transport=this.resolveTransport(data,serialno);if(transport.constructor.name=="String"){this.write(transport,"FAIL");break}this.transport=transport;this.socket.write(str2ab("OKAY"),function(){});break;case"host:kill":this.server.kill();break;case"host:connect":if(commandParts.length<3){this.write("need more arguments for connect <host>[:<port>]","FAIL");break}var remoteHost=commandParts[2];var remotePort=5555;if(commandParts.length>3)remotePort=Number.parseInt(commandParts[3]);Socket.connect({host:remoteHost,port:remotePort},function(socket,e){if(!socket){console.error("connect failed");this.write("unable to connect to "+remoteHost+" "+remotePort+": "+e,"FAIL");return this}var adb=new AdbDevice(new AdbTcpTransport(socket),function(adb){this.server.withAdbDevice(adb,function(){var response="connected to "+remoteHost+":"+remotePort;console.log(response);this.write(response)}.bind(this))}.bind(this));adb.serialno=remoteHost+":"+remotePort;socket.onClose=function(){adb.fatal("socket closed")}.bind(this);adb.sendMessage(AdbDevice.kCommandCNXN,AdbDevice.ADB_PROTOCOL_VERSION,AdbDevice.MAX_PAYLOAD,"host::");adb.receiveMessages()}.bind(this));break;case"host:track-devices":this.tracking=_nowMs();this.writeDevices({},function(){});break;case"host:forward":var forwardParts=commandParts.join(":").substring(hostCmd.length+1).split(";");var from=forwardParts[0].split(":");var fromPort=parseInt(from[1]);var transport=this.resolveTransport(data,serialno);if(transport.constructor.name=="String"){this.write(transport,"FAIL");break}transport.forwardPort({fromPort:fromPort,to:forwardParts[1]});this.socket.write(str2ab("OKAYOKAY"),function(){}.bind(this));break;default:if(this.transport){var transport=this.transport;transport.newSocket(data,function(socket){if(!socket){this.socket.write(str2ab("OKAY"),function(){this.socket.destroy()}.bind(this));return}this.socket.write(str2ab("OKAY"),function(){});Socket.stream(socket,this.socket)}.bind(this));return}var specific="host:transport:";if(data.startsWith(specific)){var serialno=data.substr(specific.length);var device=this.server.adbDevices[serialno];if(!device){this.write("device not found","FAIL");return}this.transport=device;this.socket.write(str2ab("OKAY"),function(){});break}console.log("unknown request: "+data);this.write("unknown command: "+data,"FAIL");var appName=chrome.runtime.getManifest().name;chrome.notifications.create({type:"basic",iconUrl:"/icon.png",title:appName,message:appName+"'s adb server encountered an unknown adb command.\nYou may want to close "+appName+" and start your adb binary manually."});break}this.receiveHeader()};AdbClient.prototype.receivePayload=function(data){var len=parseInt(ab2str(data),16);this.socket.read(len,this.handlePayload.bind(this))};AdbClient.prototype.receiveHeader=function(){this.socket.read(4,this.receivePayload.bind(this))};window.AdbDevice=AdbDevice;window.AdbServer=AdbServer;window.AdbTcpTransport=AdbTcpTransport})();(function(){var Adb={};Adb.sendHostCommand=function(command,cb){Socket.connect({host:"127.0.0.1",port:5037},function(socket){if(!socket){cb();return}var hostCommand=command;command=make4Len16(command.length)+command;socket.read(4,function(ok){var result=ab2str(ok);if(result!="OKAY"){console.error("error in response to adb host command",hostCommand,result);socket.destroy();cb();return}socket.read(4,function(len){var lenStr=ab2str(len);len=parseInt(lenStr,16);if(len==0||lenStr=="OKAY"){cb(socket,new ArrayBuffer(0));return}socket.read(len,function(data){cb(socket,data)})})});socket.write(str2ab(command),function(){})})};Adb.devices=function(cb){var adbDevices={};function parseConnectionPayload(payload){var rawPayload=payload;payload=payload.replace("\t"," ");var i=payload.indexOf(" ");if(i==-1)return;var serialno=payload.substring(0,i);payload=payload.substring(i).trim();var newPayload;while(newPayload!=payload){newPayload=payload;payload=payload.replace("  "," ")}var values={};var firstSpace=payload.indexOf(" ");if(firstSpace==-1)firstSpace=payload.length;var status=payload.substring(0,firstSpace);payload=payload.substring(firstSpace+1);while(payload.length){i=payload.indexOf(":");if(i==-1)break;var key=payload.substring(0,i);var rest=payload.substring(i+1);var nextSpace=rest.indexOf(" ");var nextColon=rest.indexOf(":");var value;if(nextSpace==-1||nextColon==-1){value=rest;payload=""}else{while(nextSpace!=-1&&nextSpace<nextColon){value=rest.substring(0,nextSpace);payload=rest.substring(nextSpace+1);nextSpace=rest.indexOf(" ",nextSpace+1)}}values[key]=value}var name;if(!values["model"])name=serialno;else name=values["model"].replace("_"," ");adbDevices[serialno]={serialno:serialno,name:name,status:status,properties:rawPayload}}Adb.sendHostCommand("host:devices-l",function(socket,data){if(!socket){cb();return}socket.destroy();data=ab2str(data);console.log("ADB devices:",data);data=data.trim();var lines=data.split("\n");for(var line in lines){line=lines[line];parseConnectionPayload(line)}cb(adbDevices)})};Adb.killServer=function(cb){Adb.sendHostCommand("host:kill-server",function(socket,data){if(!socket){cb();return}socket.destroy();data=ab2str(data);if(cb)cb()})};Adb.sendClientCommand=function(options,cb){var command=options.command;var serialno=options.serialno;Socket.connect({host:"127.0.0.1",port:5037},function(socket){if(!socket){cb();return}socket.read(4,function(data){var result=ab2str(data);if(result!="OKAY"){socket.destroy();cb(null);return}var clientCommand=command;clientCommand=make4Len16(clientCommand.length)+clientCommand;socket.read(4,function(data){var result=ab2str(data);if(result!="OKAY"){socket.destroy();cb(null);return}cb(socket)});socket.write(str2ab(clientCommand),function(){})});var hostCommand="host:transport:"+serialno;hostCommand=make4Len16(hostCommand.length)+hostCommand;socket.write(str2ab(hostCommand),function(){})})};Adb.shell=function(options,cb){var command=options.command;var serialno=options.serialno;Adb.getOrCreateSockFactory(options).newSocket("shell:"+command,function(socket){if(!socket){cb();return}readString(socket,function(str){cb(str)})})};Adb.forward=function(options,cb){var command="host-serial:"+options.serialno+":forward:"+options.from+";"+options.to;Adb.sendHostCommand(command,function(socket,err){if(socket)socket.destroy();cb(socket,err)})};function AdbSync(){}AdbSync.MKID=function(a,b,c,d){return a.charCodeAt(0)|b.charCodeAt(0)<<8|c.charCodeAt(0)<<16|d.charCodeAt(0)<<24};AdbSync.ID_RECV=AdbSync.MKID("R","E","C","V");AdbSync.ID_SEND=AdbSync.MKID("S","E","N","D");AdbSync.ID_DONE=AdbSync.MKID("D","O","N","E");AdbSync.ID_DATA=AdbSync.MKID("D","A","T","A");AdbSync.DATA_MAX=64*1024;Adb.pull=function(options,cb){var file=options.file;var serialno=options.serialno;var fileEntry=options.fileEntry;Adb.getOrCreateSockFactory(options).newSocket("sync:",function(socket){if(!socket){cb();return}fileEntry.createWriter(function(fileWriter){var msg=new ArrayBuffer(8);var msgView=new DataView(msg);msgView.setUint32(0,AdbSync.ID_RECV,true);msgView.setUint32(4,file.length,true);socket.write(msg,function(){socket.write(str2ab(file),function(){function readChunk(len){socket.read(len,function(data){fileWriter.write(new Blob([data]))})}fileWriter.onwriteend=function(e){readHeader()};function readHeader(){socket.read(8,function(data){var view=new DataView(data.buffer,data.byteOffset,data.byteLength);var id=view.getUint32(0,true);if(id==AdbSync.ID_DATA){var len=view.getUint32(4,true);readChunk(len);return}socket.destroy();if(id==AdbSync.ID_DONE){cb(fileEntry);return}cb()})}readHeader()})})})})};Adb.createSocketFactory=function(serialno){return{newSocket:function(command,cb){Adb.sendClientCommand({serialno:serialno,command:command},cb)}}};Adb.getOrCreateSockFactory=function(opts){return opts.socketFactory||Adb.createSocketFactory(opts.serialno)};Adb.push=function(options,cb){var file=options.file;var serialno=options.serialno;var fileSocket=options.socket;Adb.getOrCreateSockFactory(options).newSocket("sync:",function(socket){if(!socket){cb();return}var msg=new ArrayBuffer(8);var msgView=new DataView(msg);var fileAndMode=file+",0644";msgView.setUint32(0,AdbSync.ID_SEND,true);msgView.setUint32(4,fileAndMode.length,true);socket.write(msg,function(){socket.write(str2ab(fileAndMode),function(){var done;var writing=true;fileSocket.onClose=function(){var msg=new ArrayBuffer(8);var msgView=new DataView(msg);msgView.setUint32(0,AdbSync.ID_DONE,true);msgView.setUint32(4,0,true);socket.write(msg,function(){socket.read(8,function(){cb()})})};function readChunk(){fileSocket.read(function(data){if(data.byteLength>AdbSync.DATA_MAX){var extra=data.subarray(AdbSync.DATA_MAX);data=data.subarray(0,AdbSync.DATA_MAX);fileSocket.unshift(extra)}writeChunk(data)})}function writeChunk(data){var msg=new ArrayBuffer(8);var msgView=new DataView(msg);msgView.setUint32(0,AdbSync.ID_DATA,true);msgView.setUint32(4,data.byteLength,true);socket.write(msg,function(){var buffer=data.buffer;if(data.byteOffset||data.length!=buffer.byteLength){buffer=buffer.slice(data.byteOffset,data.byteOffset+data.byteLength)}socket.write(buffer,function(){readChunk()})})}readChunk()})})})};window.Adb=Adb})();(function(){function installApk(apkUrl,serialno,cb){$.ajax({url:apkUrl,dataType:"binary",responseType:"arraybuffer",success:function(ab){var uib=new Uint8Array(ab);var dummy=new DummySocket(uib);var tmp="/data/local/tmp/apk"+(new Date).getTime()+".apk";Adb.push({serialno:serialno,file:tmp,socket:dummy},function(){Adb.shell({command:"pm install -r "+tmp,serialno:serialno},cb)})},error:function(e){console.error("error fetching apk",e);cb()}})}function getApkPath(serialno,pkg,cb){Adb.shell({command:"pm path "+pkg,serialno:serialno},function(path){if(path==""||!path){cb(null);return}var match=path.match(/package:\/.*?[\r\n]/);if(!match||!match.length){cb(null);return}path=match[0];path=path.replace("package:","").trim();cb(path)})}function runMain(serialno,apkPath,mainCommand,cb,shellEvaluator){if(!shellEvaluator)shellEvaluator=Adb.shell;Adb.shell({command:"ls -l /system/bin/app_process*",serialno:serialno},function(test){var appProcess="/system/bin/app_process";if(test&&test.indexOf("app_process32")!=-1){appProcess+="32"}shellEvaluator({command:'sh -c "CLASSPATH='+apkPath+" "+appProcess+" /system/bin "+mainCommand+'"',serialno:serialno},cb)})}window.AdbUtils={runMain:runMain,installApk:installApk,getApkPath:getApkPath}})();var adbServer=new AdbServer({start:false});var list;function openList(cb){if(list){if(cb){cb(list)}return}chrome.app.window.create("list.html",{bounds:{width:640,height:800}},function(w){adbServer.start();adbDevices={};processing={};list=w;list.contentWindow.appcallback=function(){if(navigator.platform.toLowerCase().indexOf("win")==-1){$(list.contentWindow.document).find("#windows").hide()}};list.onClosed.addListener(function(){list=null;if(adbServer.isRunning()){adbServer.kill()}});if(cb){controller=new Controller(receiverWindow.contentWindow,true);cb(receiverWindow)}})}chrome.app.runtime.onLaunched.addListener(function(){openList()});var adbDevices={};var processing={};function refreshList(){if(!list){return}$(list.contentWindow.document).find("#devices").empty();var keys=Object.keys(adbDevices);if(!keys.length){var ele=$('<a href="#" class="btn btn-lg btn-default">No devices found</a>');$(list.contentWindow.document).find("#devices").append(ele)}else{$(keys).each(function(index,serialno){var device=adbDevices[serialno];var ele=$('<p class="lead"><a href="#" class="btn btn-lg btn-default">'+device+"</a></p>");$(list.contentWindow.document).find("#devices").append(ele);ele.click(function(){openWindow(serialno)})})}}function initRefresher(){Adb.devices(function(devices){if(list==null){return}for(var key in adbDevices){if(devices[key]){delete devices[key]}else{delete adbDevices[key]}}function activate(key,path){adbDevices[key]="activating";path=path.split(":")[1];Adb.shell({command:"ls -l /system/bin/app_process*",serialno:key},function(test){var appProcess="/system/bin/app_process";if(test&&test.indexOf("app_process32")!=-1){appProcess+="32"}var mainCommand="com.koushikdutta.shellproxy.Daemon";Adb.shell({serialno:key,command:"(CLASSPATH="+path+" "+appProcess+" /system/bin com.koushikdutta.shellproxy.ShellRunner2 > /dev/null ; sleep 30) &"},function(result){console.log(result)})})}function checkInstall(key,cb){Adb.shell({serialno:key,command:"pm path com.koushikdutta.backup"},function(path){if(path==null){cb();return}path=path.trim();cb(path)})}for(var key in adbDevices){switch(adbDevices[key]){case"installing":checkInstall(key,function(path){if(path!=null&&path.length){activate(key,path);return}});break;case"activating":checkInstall(key,function(path){if(path!=null&&path.length){activate(key,path);return}});break}}for(var key in devices){adbDevices[key]="checking";checkInstall(key,function(path){if(path==null){delete adbDevices[key];return}if(path.length){activate(key,path);return}adbDevices[key]="installing";Adb.shell({serialno:key,command:"am start -d market://details?id=com.koushikdutta.backup"},function(done){})})}function setIcon(icon){$(list.contentWindow.document).find("#icon").attr("src",icon)}var status="Waiting for device.";for(var key in adbDevices){switch(adbDevices[key]){case"checking":setIcon("icon.png");$(list.contentWindow.document).find("#status").text("Device detected. Checking installation.");return;case"installing":setIcon("icon.png");$(list.contentWindow.document).find("#status").text("Please install Helium on your Android.");return;case"activating":setIcon("iconchecked.png");$(list.contentWindow.document).find("#status").text("Helium has been activated. You can disconnect your Android!");return}}setIcon("icon.png");$(list.contentWindow.document).find("#status").text(status)})}initRefresher();function refreshDevices(){setTimeout(refreshDevices,3e3);if(!list){return}if(!adbServer.isRunning()){adbServer.start()}initRefresher();refreshList()}refreshDevices();
